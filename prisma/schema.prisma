datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id             Int            @id @default(autoincrement())
  email          String         @unique
  password       String
  organizationId Int
  organization   Organization   @relation(fields: [organizationId], references: [id])
  formResponses  FormResponse[]
}

model Organization {
  id            Int              @id @default(autoincrement())
  name          String
  type          OrganizationType
  template      Template?        @relation(fields: [templateId], references: [id])
  templateId    Int?             @unique // Optional foreign key (might have base or custom type)
  users         User[]
  formResponses FormResponse[]
}

model Template {
  id             Int           @id @default(autoincrement())
  baseTemplate   Template?     @relation("BaseTemplateCustomTemplate", fields: [baseTemplateId], references: [id])
  baseTemplateId Int?
  childTemplates Template[]    @relation("BaseTemplateCustomTemplate")
  formFields     FormField[]
  Organization   Organization?
}

model FormField {
  id         Int               @id @default(autoincrement())
  fieldName  String
  label      String
  fieldType  FieldType
  options    FormFieldOption[]
  templateId Int?
  template   Template?         @relation(fields: [templateId], references: [id])
}

model FormFieldOption {
  id          Int       @id @default(autoincrement())
  formFieldId Int
  optionValue String
  formField   FormField @relation(fields: [formFieldId], references: [id])
}

model FormResponse {
  id              Int              @id @default(autoincrement())
  userId          Int
  user            User             @relation(fields: [userId], references: [id])
  organizationId  Int
  organization    Organization     @relation(fields: [organizationId], references: [id])
  responses       String // JSON-encoded responses for existing responses field
  customQuestions CustomQuestion[]
}

model CustomQuestion {
  id             Int          @id @default(autoincrement())
  formResponseId Int
  question       String
  answer         String?
  formResponse   FormResponse @relation(fields: [formResponseId], references: [id])
}

model FormSubmission {
  id             Int           @id @default(autoincrement())
  formResponse   FormResponse  @relation(fields: [formResponseId], references: [id]) 
  formResponseId Int           @unique 
  confirmationNumber String    @unique  // Generated confirmation number 
  submittedAt    DateTime      @default(now()) // Timestamp of submission
}


enum OrganizationType {
  DEFAULT
  FINANCE
  FINANCE_CUSTOM
  MEDICAL
  MEDICAL_CUSTOM
  EDUCATIONAL
  GOVERNMENT
  DENTAL
  DENTAL_CUSTOM
  INSURANCE_CUSTOM
}

enum FieldType {
  DROPDOWN
  TEXT
  DATE
  SEARCHABLE_LIST
  TEXT_AREA
  CHECKBOX
  NUMBER
}
